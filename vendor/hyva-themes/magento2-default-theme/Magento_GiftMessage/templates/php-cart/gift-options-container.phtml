<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Magento\Framework\Escaper;
use Magento\GiftMessage\Block\Cart\GiftOptions;
use Magento\Framework\View\Helper\SecureHtmlRenderer;
use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;

/** @var Escaper $escaper */
/** @var GiftOptions $block */
/** @var SecureHtmlRenderer $secureRenderer */
/** @var ViewModelRegistry $viewModels */
/** @var HeroiconsOutline $heroicons */

$heroicons = $viewModels->require(HeroiconsOutline::class);

$slideOutDrawer = (bool) $block->getSlideOutDrawer();

?>

<script>
    function initGiftOptions() {
        'use strict';
        return {
            inSlideOut: <?= $slideOutDrawer ? 'true' : 'false' ?>,
            formBlockVisibility: false,
            resultBlockVisibility: false,
            hasActiveOptions: false,
            itemId: 'orderLevel',
            isGiftMsgEnabled: window.giftOptionsConfig.isOrderLevelGiftOptionsEnabled,
            formMessage: {
                recipient: null,
                sender: null,
                message: null,
                alreadyAdded: null,
            },
            savedFormMessage: {
                recipient: null,
                sender: null,
                message: null,
                alreadyAdded: null,
            },
            extensionAttributes: {},
            getMessage() {
                return window.giftOptionsConfig.giftMessage.hasOwnProperty(this.itemId)
                    ? window.giftOptionsConfig.giftMessage[this.itemId]
                    : null;
            },
            init() {
                const message = this.getMessage();
                const isObject = Object.prototype.toString.call(message) === '[object Object]';

                if (isObject) {
                    this.savedFormMessage.recipient = message.recipient;
                    this.savedFormMessage.sender = message.sender;
                    this.savedFormMessage.message = message.message;
                    this.savedFormMessage.alreadyAdded = true;
                    this.formMessage = Object.assign({}, this.savedFormMessage);
                    this.resultBlockVisibility = true;
                }

                <?php if ($slideOutDrawer): ?>
                    const onDrawerToggle = () => {
                        if (this.formBlockVisibility) {
                            document.body.style.overflow = 'hidden';
                        } else {
                            document.body.style.overflow = null;
                        }
                    }
                    this.$watch('formBlockVisibility', () => onDrawerToggle());
                <?php endif ?>

                this.initEventListeners();
            },
            initEventListeners() {
                window.addEventListener('additional-gift-options-loaded-' + this.itemId, (event) => {
                    if (this.hasActiveOptions) return;

                    if (event.detail.isOrderLevelGiftOptionsEnabled) this.hasActiveOptions = true;
                });

                window.addEventListener('additional-gift-options-results-' + this.itemId, (event) => {
                    if (this.resultBlockVisibility) return;

                    this.resultBlockVisibility = event.detail.hasResults;
                });

                window.addEventListener('update-gift-options-extension-attributes-' + this.itemId, (event) => {
                    this.extensionAttributes = Object.assign({}, this.extensionAttributes, event.detail);
                });
            },
            getRestEndpoint() {
                const restBaseUrl = BASE_URL + 'rest/' + CURRENT_STORE_CODE + '/V1/';

                return window.giftOptionsConfig.isCustomerLoggedIn
                    ? restBaseUrl + 'carts/mine/gift-message'
                    : restBaseUrl + 'guest-carts/' + window.giftOptionsConfig.quoteId + '/gift-message';
            },
            submitGiftOption() {

                window.dispatchEvent(new CustomEvent('before-gift-options-submit-' + this.itemId, {
                    detail: {}
                }))

                window.dispatchEvent(new Event('gift-message-loading-start'));

                fetch(this.getRestEndpoint(), {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({
                        gift_message: {
                            recipient: this.formMessage.recipient,
                            sender: this.formMessage.sender,
                            message: this.formMessage.message,
                            extension_attributes: this.extensionAttributes
                        }
                    }),
                }).then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        console.warn("GET request failed", response);
                    }
                }).then(() => {
                    this.savedFormMessage = Object.assign({}, this.formMessage);
                    document.querySelector('form[action*="checkout/cart/updatePost/"]').submit()
                });
            }
        }
    }

    function initGiftItemOptions(options) {
        'use strict';
        const itemId = options.itemId;
        return Object.assign({}, initGiftOptions(), {
            itemId: itemId,

            isGiftMsgEnabled: window.giftOptionsConfig.isItemLevelGiftOptionsEnabled &&
                window.giftOptionsConfig.giftMessage.itemLevel[`${itemId}`].is_available !== false,

            getMessage() {
                return window.giftOptionsConfig.giftMessage.hasOwnProperty('itemLevel') &&
                window.giftOptionsConfig.giftMessage.itemLevel.hasOwnProperty(itemId)
                    ? window.giftOptionsConfig.giftMessage.itemLevel[itemId].message
                    : null;
            },

            initEventListeners() {
                window.addEventListener('additional-gift-options-loaded-' + itemId, (event) => {
                    if (this.hasActiveOptions) return;

                    if (event.detail.isItemLevelGiftOptionsEnabled) this.hasActiveOptions = true;
                });

                window.addEventListener('additional-gift-options-results-' + itemId, (event) => {
                    if (this.resultBlockVisibility) return;

                    this.resultBlockVisibility = event.detail.hasResults;
                });

                window.addEventListener('update-gift-options-extension-attributes-' + itemId, (event) => {
                    this.extensionAttributes = Object.assign({}, this.extensionAttributes, event.detail);
                });
            },

            getRestEndpoint() {
                const restBaseUrl = BASE_URL + 'rest/' + CURRENT_STORE_CODE + '/V1/';
                return window.giftOptionsConfig.isCustomerLoggedIn
                    ? restBaseUrl + 'carts/mine/gift-message/' + itemId
                    : restBaseUrl + 'guest-carts/' + window.giftOptionsConfig.quoteId + '/gift-message/' + itemId;
            }
        })
    }
</script>
<div x-data="{isLoading: false}" x-cloak
     @gift-message-loading-start.window="isLoading = true"
     @gift-message-loading-end.window="isLoading = false"
>
    <?= $block->getChildHtml('loading') ?>
</div>
<div x-data="initGiftOptions()" x-init="init" class="gift-options-component w-full flex flex-wrap my-6" :data-item-id="itemId" x-cloak>
    <div class="text-left gift-options-title w-full order-first" x-show="isGiftMsgEnabled || hasActiveOptions">
        <span @click="formBlockVisibility = !formBlockVisibility" class="cursor-pointer text-primary-lighter select-none whitespace-nowrap underline">
            <?= $escaper->escapeHtml(__('Gift options')) ?>
            <?php if (!$slideOutDrawer): ?>
                <span x-show="!formBlockVisibility">
                    <?= $heroicons->chevronDownHtml('inline-block', 16, 16) ?>
                </span>
                <span x-show="formBlockVisibility">
                    <?= $heroicons->chevronUpHtml('inline-block', 16, 16) ?>
                </span>
            <?php endif ?>
        </span>
    </div>
    <?php if ($slideOutDrawer): ?>
        <div role="dialog"
            aria-labelledby="enquiry-form-drawer-title"
            aria-modal="true"
            @keydown.window.escape="formBlockVisibility=false"
             class="fixed inset-y-0 right-0 z-30 flex max-w-full"
        >
            <div class="backdrop"
                x-show="formBlockVisibility"
                x-transition:enter="ease-in-out duration-500"
                x-transition:enter-start="opacity-0"
                x-transition:enter-end="opacity-100"
                x-transition:leave="ease-in-out duration-500"
                x-transition:leave-start="opacity-100"
                x-transition:leave-end="opacity-0"
                @click="formBlockVisibility=false"
                aria-label="Close panel"
            ></div>
            <div class="relative w-screen max-w-md shadow-2xl bg-white p-8 flex flex-col overflow-y-auto"
                x-show="formBlockVisibility"
                x-transition:enter="transform transition ease-in-out duration-500 sm:duration-700"
                x-transition:enter-start="translate-x-full"
                x-transition:enter-end="translate-x-0"
                x-transition:leave="transform transition ease-in-out duration-500 sm:duration-700"
                x-transition:leave-start="translate-x-0"
                x-transition:leave-end="translate-x-full"
            >
                <div class="relative">
                    <h2 class="text-lg font-medium leading-7 text-gray-900 "><?= $escaper->escapeHtml('Order Gift Options') ?></h2>
                        <div class="absolute top-0 right-0 cursor-pointer" @click="formBlockVisibility=false" aria-label="Close panel" tabindex="0" role="button">
                            <?= $heroicons->xHtml('inline-block', 24, 24) ?>
                        </div>
                </div>
                <?= $block->getChildHtml('gift-options-body') ?>
            </div>
        </div>
    <?php else: ?>
        <?= $block->getChildHtml('gift-options-body') ?>
    <?php endif ?>
    <div x-show="(resultBlockVisibility && !formBlockVisibility) || (resultBlockVisibility && inSlideOut)" class="gift-summary pt-2" @click="formBlockVisibility = true">
        <div class="additional-options-summary"></div>
        <div x-show="savedFormMessage.message">
            <span><?= $escaper->escapeHtml(__('Message:')) ?></span> <span x-text="savedFormMessage.message"></span>
        </div>
    </div>
</div>
<script>
    window.giftOptionsConfig = <?= /* @noEscape */ $block->getGiftOptionsConfigJson() ?>
</script>
